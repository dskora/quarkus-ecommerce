quarkus.http.port=8084

# JPA Configuration
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=${QUARKUS_DB_USER:root}
quarkus.datasource.password=${QUARKUS_DB_PASS:root}
quarkus.datasource.jdbc.url=jdbc:mysql://${QUARKUS_DB_HOST:mysql}:3306/quarkus_ecommerce
quarkus.hibernate-orm.database.generation=update

# OpenAPI Specification
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui.html

# Stork consul
quarkus.stork.inventory-service.service-discovery.type=consul
quarkus.stork.inventory-service.service-discovery.consul-host=consul
quarkus.stork.inventory-service.service-discovery.consul-port=8500

quarkus.stork.payment-service.service-discovery.type=consul
quarkus.stork.payment-service.service-discovery.consul-host=consul
quarkus.stork.payment-service.service-discovery.consul-port=8500

quarkus.stork.customer-service.service-discovery.type=consul
quarkus.stork.customer-service.service-discovery.consul-host=consul
quarkus.stork.customer-service.service-discovery.consul-port=8500

quarkus.stork.shipment-service.service-discovery.type=consul
quarkus.stork.shipment-service.service-discovery.consul-host=consul
quarkus.stork.shipment-service.service-discovery.consul-port=8500

## The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=${QUARKUS_KAFKA_SERVER:kafka}:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming."order.events".connector=smallrye-kafka
mp.messaging.incoming."order.events".topic=order.events
mp.messaging.incoming."order.events".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."order.events".deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming."customer.events".connector=smallrye-kafka
mp.messaging.incoming."customer.events".topic=customer.events
mp.messaging.incoming."customer.events".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."customer.events".deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming."stock.events".connector=smallrye-kafka
mp.messaging.incoming."stock.events".topic=stock.events
mp.messaging.incoming."stock.events".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."stock.events".deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming."payment.events".connector=smallrye-kafka
mp.messaging.incoming."payment.events".topic=payment.events
mp.messaging.incoming."payment.events".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."payment.events".deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming."shipment.events".connector=smallrye-kafka
mp.messaging.incoming."shipment.events".topic=shipment.events
mp.messaging.incoming."shipment.events".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."shipment.events".deserializer=org.apache.kafka.common.serialization.StringDeserializer